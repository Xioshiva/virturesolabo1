---
- name: install and start nginx and install wireguard
  hosts: h2
  become: yes
  vars:
    http_port: 80
  tasks:
  - name: update pck
    apt:
      update_cache: yes
      force: yes
      cache_valid_time: 36000
  - name: install nginx
    apt: name=nginx state=latest
  - name: start nginx
    service:
      name: nginx
      state: started
  - name: index.html is present
    ansible.builtin.template:
      src: index.html
      dest: /var/www/html/index.html
  - name: apt wireguard
    apt: name=wireguard state=latest
      
- name: Write interfaces h2
  hosts: h2
  vars:
    addr: 10.0.2.1
    other_subnet: 10.0.1.0
    router_addr: 10.0.2.2
  become: yes
  tasks:
    - name: Set interfaces h2
      template:
        src: template
        dest: /etc/network/interfaces.d/eth1
    - name: Set interfaces h2
      ansible.builtin.shell: |
        sudo ifdown eth1 && sudo ifup eth1

- name: Install curl and wireguard h1
  hosts: h1
  become: yes
  tasks:
    - name: update pck
      apt:
        update_cache: yes
        force: yes
        cache_valid_time: 36000
    - name: apt curl h1
      apt: name=curl state=latest
    - name: apt wireguard h1
      apt: name=wireguard state=latest

- name: Write interfaces h1
  hosts: h1
  vars:
    addr: 10.0.1.1
    other_subnet: 10.0.2.0
    router_addr: 10.0.1.2
  become: yes
  tasks:
    - name: Set interfaces h1
      template:
        src: template
        dest: /etc/network/interfaces.d/eth1
    - name: Set interfaces h1
      ansible.builtin.shell: |
        sudo ifdown eth1 && sudo ifup eth1

- name: Ip forwarding
  hosts: r1
  tasks:
    - ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
      become: yes

- name: Write interfaces r1
  hosts: r1
  become: yes
  tasks:
    - name: Set interface 1
      vars:
        addr: 10.0.1.2
        ethnbr: 1
      template:
        src: templaterouter
        dest: /etc/network/interfaces.d/eth1
    - name: Set interface 2
      vars:
        addr: 10.0.2.2
        ethnbr: 2
      template:
        src: templaterouter
        dest: /etc/network/interfaces.d/eth2
    - name: Launch interfaces
      ansible.builtin.shell: |
        sudo ifdown eth1 && sudo ifup eth1
        sudo ifdown eth2 && sudo ifup eth2

- name: Wireguard setup h1
  become: yes
  vars:
    p1prk: 0
    p1pubk: 0
  hosts: h1
  tasks:
    - name: Generate WireGuard keyPair
      shell: wg genkey | tee /etc/wireguard/privatekey | wg pubkey > /etc/wireguard/publickey
    - name: Register private key h1
      shell: cat /etc/wireguard/privatekey
      register: p1prk
    - set_fact: 
        h1_priv: "{{p1prk.stdout}}"
    - name: Register public key h1
      shell: cat /etc/wireguard/publickey
      register: p1pubk
    - name : test
      set_fact: 
        h1_pub: "{{p1pubk.stdout}}"

- name: Wireguard setup h2
  become: yes
  vars:
    p2prk: 0
    p2pubk: 0
  hosts: h2
  tasks:
    - name: Generate WireGuard keyPair
      shell: wg genkey | tee /etc/wireguard/privatekey | wg pubkey > /etc/wireguard/publickey
    - name: Register private key h2
      shell: cat /etc/wireguard/privatekey
      register: p2prk
    - set_fact: 
        h2_priv: "{{p2prk.stdout}}"
    - name: Register public key h2
      shell: cat /etc/wireguard/publickey
      register: p2pubk
    - set_fact: 
        h2_pub: "{{p2pubk.stdout}}"


- name: create server wireguard config h2
  become: yes
  hosts: h2
  vars:
    peer_h1_private_key: h1_priv
    peer_h2_public_key: h2_pub
  tasks:
    - name: wireguard h2
      template:
        src: templateWGh2
        dest: /etc/wireguard/wg0.conf
        owner: root
        group: root
        mode: '0600'

- name: create server wireguard config h1
  become: yes
  hosts: h1
  tasks:
    - name: wireguard h1 
      template:
        src: templateWGh1
        dest: /etc/wireguard/wg0.conf
        owner: root
        group: root
        mode: '0600'

    